

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Jan 04 08:41:37 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	12LF1572
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	_serial_text,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     	;# 
    27  0001                     	;# 
    28  0002                     	;# 
    29  0003                     	;# 
    30  0004                     	;# 
    31  0005                     	;# 
    32  0006                     	;# 
    33  0007                     	;# 
    34  0008                     	;# 
    35  0009                     	;# 
    36  000A                     	;# 
    37  000B                     	;# 
    38  000C                     	;# 
    39  0011                     	;# 
    40  0012                     	;# 
    41  0013                     	;# 
    42  0015                     	;# 
    43  0016                     	;# 
    44  0016                     	;# 
    45  0017                     	;# 
    46  0018                     	;# 
    47  0019                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001C                     	;# 
    51  008C                     	;# 
    52  0091                     	;# 
    53  0092                     	;# 
    54  0093                     	;# 
    55  0095                     	;# 
    56  0096                     	;# 
    57  0097                     	;# 
    58  0098                     	;# 
    59  0099                     	;# 
    60  009A                     	;# 
    61  009B                     	;# 
    62  009B                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  0111                     	;# 
    69  0112                     	;# 
    70  0115                     	;# 
    71  0116                     	;# 
    72  0117                     	;# 
    73  0118                     	;# 
    74  0119                     	;# 
    75  011D                     	;# 
    76  011D                     	;# 
    77  018C                     	;# 
    78  0191                     	;# 
    79  0191                     	;# 
    80  0192                     	;# 
    81  0193                     	;# 
    82  0193                     	;# 
    83  0194                     	;# 
    84  0195                     	;# 
    85  0196                     	;# 
    86  0199                     	;# 
    87  019A                     	;# 
    88  019B                     	;# 
    89  019B                     	;# 
    90  019C                     	;# 
    91  019D                     	;# 
    92  019E                     	;# 
    93  019F                     	;# 
    94  020C                     	;# 
    95  028C                     	;# 
    96  030C                     	;# 
    97  038C                     	;# 
    98  0391                     	;# 
    99  0392                     	;# 
   100  0393                     	;# 
   101  0691                     	;# 
   102  0692                     	;# 
   103  0693                     	;# 
   104  0694                     	;# 
   105  0695                     	;# 
   106  0D8E                     	;# 
   107  0D8F                     	;# 
   108  0D90                     	;# 
   109  0D91                     	;# 
   110  0D91                     	;# 
   111  0D92                     	;# 
   112  0D93                     	;# 
   113  0D93                     	;# 
   114  0D94                     	;# 
   115  0D95                     	;# 
   116  0D95                     	;# 
   117  0D96                     	;# 
   118  0D97                     	;# 
   119  0D97                     	;# 
   120  0D98                     	;# 
   121  0D99                     	;# 
   122  0D99                     	;# 
   123  0D9A                     	;# 
   124  0D9B                     	;# 
   125  0D9C                     	;# 
   126  0D9C                     	;# 
   127  0D9D                     	;# 
   128  0D9D                     	;# 
   129  0D9E                     	;# 
   130  0D9F                     	;# 
   131  0DA0                     	;# 
   132  0DA1                     	;# 
   133  0DA1                     	;# 
   134  0DA2                     	;# 
   135  0DA3                     	;# 
   136  0DA3                     	;# 
   137  0DA4                     	;# 
   138  0DA5                     	;# 
   139  0DA5                     	;# 
   140  0DA6                     	;# 
   141  0DA7                     	;# 
   142  0DA7                     	;# 
   143  0DA8                     	;# 
   144  0DA9                     	;# 
   145  0DA9                     	;# 
   146  0DAA                     	;# 
   147  0DAB                     	;# 
   148  0DAC                     	;# 
   149  0DAC                     	;# 
   150  0DAD                     	;# 
   151  0DAD                     	;# 
   152  0DAE                     	;# 
   153  0DAF                     	;# 
   154  0DB0                     	;# 
   155  0DB1                     	;# 
   156  0DB1                     	;# 
   157  0DB2                     	;# 
   158  0DB3                     	;# 
   159  0DB3                     	;# 
   160  0DB4                     	;# 
   161  0DB5                     	;# 
   162  0DB5                     	;# 
   163  0DB6                     	;# 
   164  0DB7                     	;# 
   165  0DB7                     	;# 
   166  0DB8                     	;# 
   167  0DB9                     	;# 
   168  0DB9                     	;# 
   169  0DBA                     	;# 
   170  0DBB                     	;# 
   171  0DBC                     	;# 
   172  0DBC                     	;# 
   173  0DBD                     	;# 
   174  0DBD                     	;# 
   175  0DBE                     	;# 
   176  0DBF                     	;# 
   177  0DC0                     	;# 
   178  0FE4                     	;# 
   179  0FE5                     	;# 
   180  0FE6                     	;# 
   181  0FE7                     	;# 
   182  0FE8                     	;# 
   183  0FE8                     	;# 
   184  0FE9                     	;# 
   185  0FEA                     	;# 
   186  0FEA                     	;# 
   187  0FEB                     	;# 
   188  0FED                     	;# 
   189  0FEE                     	;# 
   190  0FEE                     	;# 
   191  0FEF                     	;# 
   192  0000                     	;# 
   193  0001                     	;# 
   194  0002                     	;# 
   195  0003                     	;# 
   196  0004                     	;# 
   197  0005                     	;# 
   198  0006                     	;# 
   199  0007                     	;# 
   200  0008                     	;# 
   201  0009                     	;# 
   202  000A                     	;# 
   203  000B                     	;# 
   204  000C                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0013                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  008C                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  0111                     	;# 
   235  0112                     	;# 
   236  0115                     	;# 
   237  0116                     	;# 
   238  0117                     	;# 
   239  0118                     	;# 
   240  0119                     	;# 
   241  011D                     	;# 
   242  011D                     	;# 
   243  018C                     	;# 
   244  0191                     	;# 
   245  0191                     	;# 
   246  0192                     	;# 
   247  0193                     	;# 
   248  0193                     	;# 
   249  0194                     	;# 
   250  0195                     	;# 
   251  0196                     	;# 
   252  0199                     	;# 
   253  019A                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019C                     	;# 
   257  019D                     	;# 
   258  019E                     	;# 
   259  019F                     	;# 
   260  020C                     	;# 
   261  028C                     	;# 
   262  030C                     	;# 
   263  038C                     	;# 
   264  0391                     	;# 
   265  0392                     	;# 
   266  0393                     	;# 
   267  0691                     	;# 
   268  0692                     	;# 
   269  0693                     	;# 
   270  0694                     	;# 
   271  0695                     	;# 
   272  0D8E                     	;# 
   273  0D8F                     	;# 
   274  0D90                     	;# 
   275  0D91                     	;# 
   276  0D91                     	;# 
   277  0D92                     	;# 
   278  0D93                     	;# 
   279  0D93                     	;# 
   280  0D94                     	;# 
   281  0D95                     	;# 
   282  0D95                     	;# 
   283  0D96                     	;# 
   284  0D97                     	;# 
   285  0D97                     	;# 
   286  0D98                     	;# 
   287  0D99                     	;# 
   288  0D99                     	;# 
   289  0D9A                     	;# 
   290  0D9B                     	;# 
   291  0D9C                     	;# 
   292  0D9C                     	;# 
   293  0D9D                     	;# 
   294  0D9D                     	;# 
   295  0D9E                     	;# 
   296  0D9F                     	;# 
   297  0DA0                     	;# 
   298  0DA1                     	;# 
   299  0DA1                     	;# 
   300  0DA2                     	;# 
   301  0DA3                     	;# 
   302  0DA3                     	;# 
   303  0DA4                     	;# 
   304  0DA5                     	;# 
   305  0DA5                     	;# 
   306  0DA6                     	;# 
   307  0DA7                     	;# 
   308  0DA7                     	;# 
   309  0DA8                     	;# 
   310  0DA9                     	;# 
   311  0DA9                     	;# 
   312  0DAA                     	;# 
   313  0DAB                     	;# 
   314  0DAC                     	;# 
   315  0DAC                     	;# 
   316  0DAD                     	;# 
   317  0DAD                     	;# 
   318  0DAE                     	;# 
   319  0DAF                     	;# 
   320  0DB0                     	;# 
   321  0DB1                     	;# 
   322  0DB1                     	;# 
   323  0DB2                     	;# 
   324  0DB3                     	;# 
   325  0DB3                     	;# 
   326  0DB4                     	;# 
   327  0DB5                     	;# 
   328  0DB5                     	;# 
   329  0DB6                     	;# 
   330  0DB7                     	;# 
   331  0DB7                     	;# 
   332  0DB8                     	;# 
   333  0DB9                     	;# 
   334  0DB9                     	;# 
   335  0DBA                     	;# 
   336  0DBB                     	;# 
   337  0DBC                     	;# 
   338  0DBC                     	;# 
   339  0DBD                     	;# 
   340  0DBD                     	;# 
   341  0DBE                     	;# 
   342  0DBF                     	;# 
   343  0DC0                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE8                     	;# 
   350  0FE9                     	;# 
   351  0FEA                     	;# 
   352  0FEA                     	;# 
   353  0FEB                     	;# 
   354  0FED                     	;# 
   355  0FEE                     	;# 
   356  0FEE                     	;# 
   357  0FEF                     	;# 
   358  0000                     	;# 
   359  0001                     	;# 
   360  0002                     	;# 
   361  0003                     	;# 
   362  0004                     	;# 
   363  0005                     	;# 
   364  0006                     	;# 
   365  0007                     	;# 
   366  0008                     	;# 
   367  0009                     	;# 
   368  000A                     	;# 
   369  000B                     	;# 
   370  000C                     	;# 
   371  0011                     	;# 
   372  0012                     	;# 
   373  0013                     	;# 
   374  0015                     	;# 
   375  0016                     	;# 
   376  0016                     	;# 
   377  0017                     	;# 
   378  0018                     	;# 
   379  0019                     	;# 
   380  001A                     	;# 
   381  001B                     	;# 
   382  001C                     	;# 
   383  008C                     	;# 
   384  0091                     	;# 
   385  0092                     	;# 
   386  0093                     	;# 
   387  0095                     	;# 
   388  0096                     	;# 
   389  0097                     	;# 
   390  0098                     	;# 
   391  0099                     	;# 
   392  009A                     	;# 
   393  009B                     	;# 
   394  009B                     	;# 
   395  009C                     	;# 
   396  009D                     	;# 
   397  009E                     	;# 
   398  009F                     	;# 
   399  010C                     	;# 
   400  0111                     	;# 
   401  0112                     	;# 
   402  0115                     	;# 
   403  0116                     	;# 
   404  0117                     	;# 
   405  0118                     	;# 
   406  0119                     	;# 
   407  011D                     	;# 
   408  011D                     	;# 
   409  018C                     	;# 
   410  0191                     	;# 
   411  0191                     	;# 
   412  0192                     	;# 
   413  0193                     	;# 
   414  0193                     	;# 
   415  0194                     	;# 
   416  0195                     	;# 
   417  0196                     	;# 
   418  0199                     	;# 
   419  019A                     	;# 
   420  019B                     	;# 
   421  019B                     	;# 
   422  019C                     	;# 
   423  019D                     	;# 
   424  019E                     	;# 
   425  019F                     	;# 
   426  020C                     	;# 
   427  028C                     	;# 
   428  030C                     	;# 
   429  038C                     	;# 
   430  0391                     	;# 
   431  0392                     	;# 
   432  0393                     	;# 
   433  0691                     	;# 
   434  0692                     	;# 
   435  0693                     	;# 
   436  0694                     	;# 
   437  0695                     	;# 
   438  0D8E                     	;# 
   439  0D8F                     	;# 
   440  0D90                     	;# 
   441  0D91                     	;# 
   442  0D91                     	;# 
   443  0D92                     	;# 
   444  0D93                     	;# 
   445  0D93                     	;# 
   446  0D94                     	;# 
   447  0D95                     	;# 
   448  0D95                     	;# 
   449  0D96                     	;# 
   450  0D97                     	;# 
   451  0D97                     	;# 
   452  0D98                     	;# 
   453  0D99                     	;# 
   454  0D99                     	;# 
   455  0D9A                     	;# 
   456  0D9B                     	;# 
   457  0D9C                     	;# 
   458  0D9C                     	;# 
   459  0D9D                     	;# 
   460  0D9D                     	;# 
   461  0D9E                     	;# 
   462  0D9F                     	;# 
   463  0DA0                     	;# 
   464  0DA1                     	;# 
   465  0DA1                     	;# 
   466  0DA2                     	;# 
   467  0DA3                     	;# 
   468  0DA3                     	;# 
   469  0DA4                     	;# 
   470  0DA5                     	;# 
   471  0DA5                     	;# 
   472  0DA6                     	;# 
   473  0DA7                     	;# 
   474  0DA7                     	;# 
   475  0DA8                     	;# 
   476  0DA9                     	;# 
   477  0DA9                     	;# 
   478  0DAA                     	;# 
   479  0DAB                     	;# 
   480  0DAC                     	;# 
   481  0DAC                     	;# 
   482  0DAD                     	;# 
   483  0DAD                     	;# 
   484  0DAE                     	;# 
   485  0DAF                     	;# 
   486  0DB0                     	;# 
   487  0DB1                     	;# 
   488  0DB1                     	;# 
   489  0DB2                     	;# 
   490  0DB3                     	;# 
   491  0DB3                     	;# 
   492  0DB4                     	;# 
   493  0DB5                     	;# 
   494  0DB5                     	;# 
   495  0DB6                     	;# 
   496  0DB7                     	;# 
   497  0DB7                     	;# 
   498  0DB8                     	;# 
   499  0DB9                     	;# 
   500  0DB9                     	;# 
   501  0DBA                     	;# 
   502  0DBB                     	;# 
   503  0DBC                     	;# 
   504  0DBC                     	;# 
   505  0DBD                     	;# 
   506  0DBD                     	;# 
   507  0DBE                     	;# 
   508  0DBF                     	;# 
   509  0DC0                     	;# 
   510  0FE4                     	;# 
   511  0FE5                     	;# 
   512  0FE6                     	;# 
   513  0FE7                     	;# 
   514  0FE8                     	;# 
   515  0FE8                     	;# 
   516  0FE9                     	;# 
   517  0FEA                     	;# 
   518  0FEA                     	;# 
   519  0FEB                     	;# 
   520  0FED                     	;# 
   521  0FEE                     	;# 
   522  0FEE                     	;# 
   523  0FEF                     	;# 
   524  0000                     	;# 
   525  0001                     	;# 
   526  0002                     	;# 
   527  0003                     	;# 
   528  0004                     	;# 
   529  0005                     	;# 
   530  0006                     	;# 
   531  0007                     	;# 
   532  0008                     	;# 
   533  0009                     	;# 
   534  000A                     	;# 
   535  000B                     	;# 
   536  000C                     	;# 
   537  0011                     	;# 
   538  0012                     	;# 
   539  0013                     	;# 
   540  0015                     	;# 
   541  0016                     	;# 
   542  0016                     	;# 
   543  0017                     	;# 
   544  0018                     	;# 
   545  0019                     	;# 
   546  001A                     	;# 
   547  001B                     	;# 
   548  001C                     	;# 
   549  008C                     	;# 
   550  0091                     	;# 
   551  0092                     	;# 
   552  0093                     	;# 
   553  0095                     	;# 
   554  0096                     	;# 
   555  0097                     	;# 
   556  0098                     	;# 
   557  0099                     	;# 
   558  009A                     	;# 
   559  009B                     	;# 
   560  009B                     	;# 
   561  009C                     	;# 
   562  009D                     	;# 
   563  009E                     	;# 
   564  009F                     	;# 
   565  010C                     	;# 
   566  0111                     	;# 
   567  0112                     	;# 
   568  0115                     	;# 
   569  0116                     	;# 
   570  0117                     	;# 
   571  0118                     	;# 
   572  0119                     	;# 
   573  011D                     	;# 
   574  011D                     	;# 
   575  018C                     	;# 
   576  0191                     	;# 
   577  0191                     	;# 
   578  0192                     	;# 
   579  0193                     	;# 
   580  0193                     	;# 
   581  0194                     	;# 
   582  0195                     	;# 
   583  0196                     	;# 
   584  0199                     	;# 
   585  019A                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019C                     	;# 
   589  019D                     	;# 
   590  019E                     	;# 
   591  019F                     	;# 
   592  020C                     	;# 
   593  028C                     	;# 
   594  030C                     	;# 
   595  038C                     	;# 
   596  0391                     	;# 
   597  0392                     	;# 
   598  0393                     	;# 
   599  0691                     	;# 
   600  0692                     	;# 
   601  0693                     	;# 
   602  0694                     	;# 
   603  0695                     	;# 
   604  0D8E                     	;# 
   605  0D8F                     	;# 
   606  0D90                     	;# 
   607  0D91                     	;# 
   608  0D91                     	;# 
   609  0D92                     	;# 
   610  0D93                     	;# 
   611  0D93                     	;# 
   612  0D94                     	;# 
   613  0D95                     	;# 
   614  0D95                     	;# 
   615  0D96                     	;# 
   616  0D97                     	;# 
   617  0D97                     	;# 
   618  0D98                     	;# 
   619  0D99                     	;# 
   620  0D99                     	;# 
   621  0D9A                     	;# 
   622  0D9B                     	;# 
   623  0D9C                     	;# 
   624  0D9C                     	;# 
   625  0D9D                     	;# 
   626  0D9D                     	;# 
   627  0D9E                     	;# 
   628  0D9F                     	;# 
   629  0DA0                     	;# 
   630  0DA1                     	;# 
   631  0DA1                     	;# 
   632  0DA2                     	;# 
   633  0DA3                     	;# 
   634  0DA3                     	;# 
   635  0DA4                     	;# 
   636  0DA5                     	;# 
   637  0DA5                     	;# 
   638  0DA6                     	;# 
   639  0DA7                     	;# 
   640  0DA7                     	;# 
   641  0DA8                     	;# 
   642  0DA9                     	;# 
   643  0DA9                     	;# 
   644  0DAA                     	;# 
   645  0DAB                     	;# 
   646  0DAC                     	;# 
   647  0DAC                     	;# 
   648  0DAD                     	;# 
   649  0DAD                     	;# 
   650  0DAE                     	;# 
   651  0DAF                     	;# 
   652  0DB0                     	;# 
   653  0DB1                     	;# 
   654  0DB1                     	;# 
   655  0DB2                     	;# 
   656  0DB3                     	;# 
   657  0DB3                     	;# 
   658  0DB4                     	;# 
   659  0DB5                     	;# 
   660  0DB5                     	;# 
   661  0DB6                     	;# 
   662  0DB7                     	;# 
   663  0DB7                     	;# 
   664  0DB8                     	;# 
   665  0DB9                     	;# 
   666  0DB9                     	;# 
   667  0DBA                     	;# 
   668  0DBB                     	;# 
   669  0DBC                     	;# 
   670  0DBC                     	;# 
   671  0DBD                     	;# 
   672  0DBD                     	;# 
   673  0DBE                     	;# 
   674  0DBF                     	;# 
   675  0DC0                     	;# 
   676  0FE4                     	;# 
   677  0FE5                     	;# 
   678  0FE6                     	;# 
   679  0FE7                     	;# 
   680  0FE8                     	;# 
   681  0FE8                     	;# 
   682  0FE9                     	;# 
   683  0FEA                     	;# 
   684  0FEA                     	;# 
   685  0FEB                     	;# 
   686  0FED                     	;# 
   687  0FEE                     	;# 
   688  0FEE                     	;# 
   689  0FEF                     	;# 
   690  0000                     	;# 
   691  0001                     	;# 
   692  0002                     	;# 
   693  0003                     	;# 
   694  0004                     	;# 
   695  0005                     	;# 
   696  0006                     	;# 
   697  0007                     	;# 
   698  0008                     	;# 
   699  0009                     	;# 
   700  000A                     	;# 
   701  000B                     	;# 
   702  000C                     	;# 
   703  0011                     	;# 
   704  0012                     	;# 
   705  0013                     	;# 
   706  0015                     	;# 
   707  0016                     	;# 
   708  0016                     	;# 
   709  0017                     	;# 
   710  0018                     	;# 
   711  0019                     	;# 
   712  001A                     	;# 
   713  001B                     	;# 
   714  001C                     	;# 
   715  008C                     	;# 
   716  0091                     	;# 
   717  0092                     	;# 
   718  0093                     	;# 
   719  0095                     	;# 
   720  0096                     	;# 
   721  0097                     	;# 
   722  0098                     	;# 
   723  0099                     	;# 
   724  009A                     	;# 
   725  009B                     	;# 
   726  009B                     	;# 
   727  009C                     	;# 
   728  009D                     	;# 
   729  009E                     	;# 
   730  009F                     	;# 
   731  010C                     	;# 
   732  0111                     	;# 
   733  0112                     	;# 
   734  0115                     	;# 
   735  0116                     	;# 
   736  0117                     	;# 
   737  0118                     	;# 
   738  0119                     	;# 
   739  011D                     	;# 
   740  011D                     	;# 
   741  018C                     	;# 
   742  0191                     	;# 
   743  0191                     	;# 
   744  0192                     	;# 
   745  0193                     	;# 
   746  0193                     	;# 
   747  0194                     	;# 
   748  0195                     	;# 
   749  0196                     	;# 
   750  0199                     	;# 
   751  019A                     	;# 
   752  019B                     	;# 
   753  019B                     	;# 
   754  019C                     	;# 
   755  019D                     	;# 
   756  019E                     	;# 
   757  019F                     	;# 
   758  020C                     	;# 
   759  028C                     	;# 
   760  030C                     	;# 
   761  038C                     	;# 
   762  0391                     	;# 
   763  0392                     	;# 
   764  0393                     	;# 
   765  0691                     	;# 
   766  0692                     	;# 
   767  0693                     	;# 
   768  0694                     	;# 
   769  0695                     	;# 
   770  0D8E                     	;# 
   771  0D8F                     	;# 
   772  0D90                     	;# 
   773  0D91                     	;# 
   774  0D91                     	;# 
   775  0D92                     	;# 
   776  0D93                     	;# 
   777  0D93                     	;# 
   778  0D94                     	;# 
   779  0D95                     	;# 
   780  0D95                     	;# 
   781  0D96                     	;# 
   782  0D97                     	;# 
   783  0D97                     	;# 
   784  0D98                     	;# 
   785  0D99                     	;# 
   786  0D99                     	;# 
   787  0D9A                     	;# 
   788  0D9B                     	;# 
   789  0D9C                     	;# 
   790  0D9C                     	;# 
   791  0D9D                     	;# 
   792  0D9D                     	;# 
   793  0D9E                     	;# 
   794  0D9F                     	;# 
   795  0DA0                     	;# 
   796  0DA1                     	;# 
   797  0DA1                     	;# 
   798  0DA2                     	;# 
   799  0DA3                     	;# 
   800  0DA3                     	;# 
   801  0DA4                     	;# 
   802  0DA5                     	;# 
   803  0DA5                     	;# 
   804  0DA6                     	;# 
   805  0DA7                     	;# 
   806  0DA7                     	;# 
   807  0DA8                     	;# 
   808  0DA9                     	;# 
   809  0DA9                     	;# 
   810  0DAA                     	;# 
   811  0DAB                     	;# 
   812  0DAC                     	;# 
   813  0DAC                     	;# 
   814  0DAD                     	;# 
   815  0DAD                     	;# 
   816  0DAE                     	;# 
   817  0DAF                     	;# 
   818  0DB0                     	;# 
   819  0DB1                     	;# 
   820  0DB1                     	;# 
   821  0DB2                     	;# 
   822  0DB3                     	;# 
   823  0DB3                     	;# 
   824  0DB4                     	;# 
   825  0DB5                     	;# 
   826  0DB5                     	;# 
   827  0DB6                     	;# 
   828  0DB7                     	;# 
   829  0DB7                     	;# 
   830  0DB8                     	;# 
   831  0DB9                     	;# 
   832  0DB9                     	;# 
   833  0DBA                     	;# 
   834  0DBB                     	;# 
   835  0DBC                     	;# 
   836  0DBC                     	;# 
   837  0DBD                     	;# 
   838  0DBD                     	;# 
   839  0DBE                     	;# 
   840  0DBF                     	;# 
   841  0DC0                     	;# 
   842  0FE4                     	;# 
   843  0FE5                     	;# 
   844  0FE6                     	;# 
   845  0FE7                     	;# 
   846  0FE8                     	;# 
   847  0FE8                     	;# 
   848  0FE9                     	;# 
   849  0FEA                     	;# 
   850  0FEA                     	;# 
   851  0FEB                     	;# 
   852  0FED                     	;# 
   853  0FEE                     	;# 
   854  0FEE                     	;# 
   855  0FEF                     	;# 
   856                           
   857                           	psect	idataBANK0
   858  0610                     __pidataBANK0:	
   859                           
   860                           ;initializer for _packet_t
   861  0610  34FF               	retlw	255
   862  0611  34FE               	retlw	254
   863  0612  3400               	retlw	0
   864  0613  3400               	retlw	0
   865  0614  3400               	retlw	0
   866  0615  3400               	retlw	0
   867  0616  3400               	retlw	0
   868  0617  3400               	retlw	0
   869  03FD                     _serial_absaddr	set	1021
   870  03FD                     _serial_absaddr	set	1021
   871                           
   872                           	psect	_serial_text
   873  03FD                     __p_serial_text:	
   874  03FD                     _serial:	
   875  03FD  3407               	retlw	7
   876  03FE  34FF               	retlw	255
   877  03FF  347E               	retlw	126
   878  0400                     __end_of_serial:	
   879  000C                     _PORTA	set	12
   880  009D                     _ADCON0	set	157
   881  009D                     _ADCON0bits	set	157
   882  009E                     _ADCON1	set	158
   883  009F                     _ADCON2	set	159
   884  009C                     _ADRESH	set	156
   885  009B                     _ADRESL	set	155
   886  0095                     _OPTION_REGbits	set	149
   887  0099                     _OSCCON	set	153
   888  0098                     _OSCTUNE	set	152
   889  008C                     _TRISA	set	140
   890  0097                     _WDTCON	set	151
   891  011D                     _APFCON	set	285
   892  0117                     _FVRCON	set	279
   893  0117                     _FVRCONbits	set	279
   894  010C                     _LATA	set	268
   895  010C                     _LATAbits	set	268
   896  018C                     _ANSELA	set	396
   897  020C                     _WPUA	set	524
   898                           
   899                           ; #config settings
   900  0000                     
   901                           	psect	cinit
   902  0400                     start_initialization:	
   903  0400                     __initialization:	
   904                           
   905                           ; Initialize objects allocated to BANK0
   906  0400  3010               	movlw	low __pidataBANK0
   907  0401  0084               	movwf	4
   908  0402  3086               	movlw	(high __pidataBANK0)| (0+128)
   909  0403  0085               	movwf	5
   910  0404  3034               	movlw	low __pdataBANK0
   911  0405  0086               	movwf	6
   912  0406  3000               	movlw	high __pdataBANK0
   913  0407  0087               	movwf	7
   914  0408  3008               	movlw	8
   915  0409  2618               	fcall	init_ram
   916                           
   917                           ; Clear objects allocated to BANK0
   918  040A  3020               	movlw	low __pbssBANK0
   919  040B  0084               	movwf	4
   920  040C  3000               	movlw	high __pbssBANK0
   921  040D  0085               	movwf	5
   922  040E  3014               	movlw	20
   923  040F  261E               	fcall	clear_ram0
   924  0410                     end_of_initialization:	
   925                           ;End of C runtime variable initialization code
   926                           
   927  0410                     __end_of__initialization:	
   928  0410  0020               	movlb	0
   929  0411  2C12               	ljmp	_main	;jump to C main() function
   930                           
   931                           	psect	bssBANK0
   932  0020                     __pbssBANK0:	
   933  0020                     _adc_RA2:	
   934  0020                     	ds	2
   935  0022                     _battery_level:	
   936  0022                     	ds	2
   937  0024                     _encman:	
   938  0024                     	ds	16
   939                           
   940                           	psect	dataBANK0
   941  0034                     __pdataBANK0:	
   942  0034                     _packet_t:	
   943  0034                     	ds	8
   944                           
   945                           	psect	inittext
   946  0618                     init_ram:	
   947  0618  00FE               	movwf	126
   948  0619                     initloop:	
   949  0619  0012               	moviw fsr0++
   950  061A  001E               	movwi fsr1++
   951  061B  0BFE               	decfsz	126,f
   952  061C  2E19               	goto	initloop
   953  061D  3400               	retlw	0
   954                           
   955                           	psect	clrtext
   956  061E                     clear_ram0:	
   957                           ;	Called with FSR0 containing the base address, and
   958                           ;	WREG with the size to clear
   959                           
   960  061E  0064               	clrwdt	;clear the watchdog before getting into this loop
   961  061F                     clrloop0:	
   962  061F  0180               	clrf	0	;clear RAM location pointed to by FSR
   963  0620  3101               	addfsr 0,1
   964  0621  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   965  0622  2E1F               	goto	clrloop0	;have we reached the end yet?
   966  0623  3400               	retlw	0	;all done for this memory range, return
   967                           
   968                           	psect	cstackCOMMON
   969  0070                     __pcstackCOMMON:	
   970  0070                     ?_PIN_MANAGER_Initialize:	
   971  0070                     ??_PIN_MANAGER_Initialize:	
   972                           ; 1 bytes @ 0x0
   973                           
   974  0070                     ?_OSCILLATOR_Initialize:	
   975                           ; 1 bytes @ 0x0
   976                           
   977  0070                     ??_OSCILLATOR_Initialize:	
   978                           ; 1 bytes @ 0x0
   979                           
   980  0070                     ?_WDT_Initialize:	
   981                           ; 1 bytes @ 0x0
   982                           
   983  0070                     ??_WDT_Initialize:	
   984                           ; 1 bytes @ 0x0
   985                           
   986  0070                     ?_ADC1_Initialize:	
   987                           ; 1 bytes @ 0x0
   988                           
   989  0070                     ??_ADC1_Initialize:	
   990                           ; 1 bytes @ 0x0
   991                           
   992  0070                     ?_FVR_Initialize:	
   993                           ; 1 bytes @ 0x0
   994                           
   995  0070                     ??_FVR_Initialize:	
   996                           ; 1 bytes @ 0x0
   997                           
   998  0070                     ?_SYSTEM_Initialize:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001  0070                     ??_SYSTEM_Initialize:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004  0070                     ?_manchester_enc:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007  0070                     ?_crc12:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0070                     ?_delay_us:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0070                     ??_delay_us:	
  1014                           ; 1 bytes @ 0x0
  1015                           
  1016  0070                     ?_sendSignal:	
  1017                           ; 1 bytes @ 0x0
  1018                           
  1019  0070                     ?_main:	
  1020                           ; 1 bytes @ 0x0
  1021                           
  1022  0070                     ?_ADC1_GetConversion:	
  1023                           ; 1 bytes @ 0x0
  1024                           
  1025  0070                     manchester_enc@outbuf:	
  1026                           ; 2 bytes @ 0x0
  1027                           
  1028  0070                     crc12@outbuf:	
  1029                           ; 1 bytes @ 0x0
  1030                           
  1031                           
  1032                           ; 1 bytes @ 0x0
  1033  0070                     	ds	1
  1034  0071                     manchester_enc@len:	
  1035  0071                     crc12@len:	
  1036                           ; 1 bytes @ 0x1
  1037                           
  1038  0071                     delay_us@delay:	
  1039                           ; 1 bytes @ 0x1
  1040                           
  1041                           
  1042                           ; 1 bytes @ 0x1
  1043  0071                     	ds	1
  1044  0072                     ??_ADC1_GetConversion:	
  1045  0072                     ??_manchester_enc:	
  1046                           ; 1 bytes @ 0x2
  1047                           
  1048  0072                     ??_crc12:	
  1049                           ; 1 bytes @ 0x2
  1050                           
  1051  0072                     delay_us@i:	
  1052                           ; 1 bytes @ 0x2
  1053                           
  1054                           
  1055                           ; 1 bytes @ 0x2
  1056  0072                     	ds	1
  1057  0073                     ADC1_GetConversion@channel:	
  1058  0073                     delay_us@k:	
  1059                           ; 1 bytes @ 0x3
  1060                           
  1061                           
  1062                           ; 1 bytes @ 0x3
  1063  0073                     	ds	1
  1064  0074                     ??_sendSignal:	
  1065  0074                     manchester_enc@inbuf:	
  1066                           ; 1 bytes @ 0x4
  1067                           
  1068                           
  1069                           ; 1 bytes @ 0x4
  1070  0074                     	ds	1
  1071  0075                     manchester_enc@k:	
  1072  0075                     crc12@inbuf_t:	
  1073                           ; 1 bytes @ 0x5
  1074                           
  1075                           
  1076                           ; 2 bytes @ 0x5
  1077  0075                     	ds	1
  1078  0076                     manchester_enc@outbuf_idx:	
  1079  0076                     sendSignal@pt:	
  1080                           ; 1 bytes @ 0x6
  1081                           
  1082                           
  1083                           ; 1 bytes @ 0x6
  1084  0076                     	ds	1
  1085  0077                     manchester_enc@hbyte:	
  1086  0077                     crc12@inbuf:	
  1087                           ; 1 bytes @ 0x7
  1088                           
  1089  0077                     sendSignal@k:	
  1090                           ; 1 bytes @ 0x7
  1091                           
  1092                           
  1093                           ; 1 bytes @ 0x7
  1094  0077                     	ds	1
  1095  0078                     manchester_enc@lbyte:	
  1096  0078                     crc12@i:	
  1097                           ; 1 bytes @ 0x8
  1098                           
  1099  0078                     sendSignal@n:	
  1100                           ; 1 bytes @ 0x8
  1101                           
  1102                           
  1103                           ; 1 bytes @ 0x8
  1104  0078                     	ds	1
  1105  0079                     manchester_enc@tbyte:	
  1106  0079                     crc12@k:	
  1107                           ; 1 bytes @ 0x9
  1108                           
  1109  0079                     sendSignal@wbyte:	
  1110                           ; 1 bytes @ 0x9
  1111                           
  1112                           
  1113                           ; 1 bytes @ 0x9
  1114  0079                     	ds	1
  1115  007A                     manchester_enc@i:	
  1116  007A                     sendSignal@old_state:	
  1117                           ; 1 bytes @ 0xA
  1118                           
  1119  007A                     crc12@crc:	
  1120                           ; 1 bytes @ 0xA
  1121                           
  1122                           
  1123                           ; 2 bytes @ 0xA
  1124  007A                     	ds	1
  1125  007B                     sendSignal@i:	
  1126                           
  1127                           ; 1 bytes @ 0xB
  1128  007B                     	ds	1
  1129  007C                     ??_main:	
  1130                           
  1131                           ; 1 bytes @ 0xC
  1132  007C                     	ds	2
  1133                           
  1134                           	psect	cstackBANK0
  1135  003C                     __pcstackBANK0:	
  1136  003C                     main@lc_ext_state:	
  1137                           
  1138                           ; 1 bytes @ 0x0
  1139  003C                     	ds	1
  1140                           
  1141                           	psect	maintext
  1142  0412                     __pmaintext:	
  1143 ;;
  1144 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1145 ;;
  1146 ;; *************** function _main *****************
  1147 ;; Defined at:
  1148 ;;		line 236 in file "main.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;		None
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  lc_ext_state    1    0[BANK0 ] unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : B1F/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1162 ;;      Params:         0       0       0       0
  1163 ;;      Locals:         0       1       0       0
  1164 ;;      Temps:          2       0       0       0
  1165 ;;      Totals:         2       1       0       0
  1166 ;;Total ram usage:        3 bytes
  1167 ;; Hardware stack levels required when called:    2
  1168 ;; This function calls:
  1169 ;;		_ADC1_GetConversion
  1170 ;;		_SYSTEM_Initialize
  1171 ;;		_crc12
  1172 ;;		_manchester_enc
  1173 ;;		_sendSignal
  1174 ;; This function is called by:
  1175 ;;		Startup code after reset
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _main
  1181  0412                     _main:	
  1182                           
  1183                           ;main.c: 238: U8 lc_ext_state;
  1184                           ;main.c: 241: SYSTEM_Initialize();
  1185                           
  1186                           ;incstack = 0
  1187                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1188  0412  2624               	fcall	_SYSTEM_Initialize
  1189                           
  1190                           ;main.c: 262: packet_t[2] = (serial[0] & 0x0F) | 0xA0;
  1191  0413  30FD               	movlw	253
  1192  0414  0084               	movwf	4
  1193  0415  3083               	movlw	131
  1194  0416  0085               	movwf	5
  1195  0417  0800               	movf	0,w	;code access
  1196  0418  390F               	andlw	15
  1197  0419  38A0               	iorlw	160
  1198  041A  00FC               	movwf	??_main
  1199  041B  087C               	movf	??_main,w
  1200  041C  0020               	movlb	0	; select bank0
  1201  041D  00B6               	movwf	_packet_t+2
  1202                           
  1203                           ;main.c: 263: packet_t[3] = serial[1];
  1204  041E  30FE               	movlw	254
  1205  041F  0084               	movwf	4
  1206  0420  3083               	movlw	131
  1207  0421  0085               	movwf	5
  1208  0422  0800               	movf	0,w	;code access
  1209  0423  00FC               	movwf	??_main
  1210  0424  087C               	movf	??_main,w
  1211  0425  00B7               	movwf	_packet_t+3
  1212                           
  1213                           ;main.c: 264: packet_t[4] = serial[2];
  1214  0426  30FF               	movlw	255
  1215  0427  0084               	movwf	4
  1216  0428  3083               	movlw	131
  1217  0429  0085               	movwf	5
  1218  042A  0800               	movf	0,w	;code access
  1219  042B  00FC               	movwf	??_main
  1220  042C  087C               	movf	??_main,w
  1221  042D  00B8               	movwf	_packet_t+4
  1222                           
  1223                           ;main.c: 265: packet_t[5] = 0x00;
  1224  042E  01B9               	clrf	_packet_t+5
  1225  042F                     l159:	
  1226                           ;main.c: 267: while (1) {
  1227                           
  1228  042F  0064               	clrwdt	;# 
  1229                           
  1230                           ;main.c: 270: if ((PORTA & (1 << 1))) {
  1231  0430  0020               	movlb	0	; select bank0
  1232  0431  1C8C               	btfss	12,1	;volatile
  1233  0432  2C35               	goto	l1012
  1234                           
  1235                           ;main.c: 271: packet_t[5] |= 0x80;
  1236  0433  17B9               	bsf	_packet_t+5,7
  1237                           
  1238                           ;main.c: 272: } else {
  1239  0434  2C39               	goto	l1014
  1240  0435                     l1012:	
  1241                           
  1242                           ;main.c: 273: packet_t[5] &= ~0x80;
  1243  0435  307F               	movlw	127
  1244  0436  00FC               	movwf	??_main
  1245  0437  087C               	movf	??_main,w
  1246  0438  05B9               	andwf	_packet_t+5,f
  1247  0439                     l1014:	
  1248                           
  1249                           ;main.c: 274: }
  1250                           ;main.c: 276: lc_ext_state = 0xFF;
  1251  0439  30FF               	movlw	255
  1252  043A  00FC               	movwf	??_main
  1253  043B  087C               	movf	??_main,w
  1254  043C  00BC               	movwf	main@lc_ext_state
  1255                           
  1256                           ;main.c: 277: if ((PORTA & (1 << 1))) {
  1257  043D  1C8C               	btfss	12,1	;volatile
  1258  043E  2C41               	goto	l1020
  1259                           
  1260                           ;main.c: 278: lc_ext_state |= 0x80;
  1261  043F  17BC               	bsf	main@lc_ext_state,7
  1262                           
  1263                           ;main.c: 279: } else {
  1264  0440  2C45               	goto	l163
  1265  0441                     l1020:	
  1266                           
  1267                           ;main.c: 280: lc_ext_state &= ~0x80;
  1268  0441  307F               	movlw	127
  1269  0442  00FC               	movwf	??_main
  1270  0443  087C               	movf	??_main,w
  1271  0444  05BC               	andwf	main@lc_ext_state,f
  1272  0445                     l163:	
  1273                           
  1274                           ;main.c: 281: }
  1275                           ;main.c: 283: packet_t[5] = packet_t[5] & lc_ext_state;
  1276  0445  0839               	movf	_packet_t+5,w
  1277  0446  053C               	andwf	main@lc_ext_state,w
  1278  0447  00FC               	movwf	??_main
  1279  0448  087C               	movf	??_main,w
  1280  0449  00B9               	movwf	_packet_t+5
  1281                           
  1282                           ;main.c: 285: adc_RA2 = ADC1_GetConversion(channel_AN2);
  1283  044A  3002               	movlw	2
  1284  044B  25C6               	fcall	_ADC1_GetConversion
  1285  044C  0871               	movf	?_ADC1_GetConversion+1,w
  1286  044D  0020               	movlb	0	; select bank0
  1287  044E  00A1               	movwf	_adc_RA2+1
  1288  044F  0870               	movf	?_ADC1_GetConversion,w
  1289  0450  00A0               	movwf	_adc_RA2
  1290                           
  1291                           ;main.c: 287: if (adc_RA2 < 0x0100)
  1292  0451  3001               	movlw	1
  1293  0452  0221               	subwf	_adc_RA2+1,w
  1294  0453  3000               	movlw	0
  1295  0454  1903               	skipnz
  1296  0455  0220               	subwf	_adc_RA2,w
  1297  0456  1803               	skipnc
  1298  0457  2C5D               	goto	l164
  1299                           
  1300                           ;main.c: 288: {
  1301                           ;main.c: 289: packet_t[5] &= ~0x40;
  1302  0458  30BF               	movlw	191
  1303  0459  00FC               	movwf	??_main
  1304  045A  087C               	movf	??_main,w
  1305  045B  05B9               	andwf	_packet_t+5,f
  1306                           
  1307                           ;main.c: 290: }
  1308  045C  2C62               	goto	l165
  1309  045D                     l164:	
  1310                           
  1311                           ;main.c: 291: else
  1312                           ;main.c: 292: {
  1313                           ;main.c: 293: packet_t[5] |= 0x40;
  1314  045D  1739               	bsf	_packet_t+5,6
  1315                           
  1316                           ;main.c: 294: battery_level = adc_RA2;
  1317  045E  0821               	movf	_adc_RA2+1,w
  1318  045F  00A3               	movwf	_battery_level+1
  1319  0460  0820               	movf	_adc_RA2,w
  1320  0461  00A2               	movwf	_battery_level
  1321  0462                     l165:	
  1322                           
  1323                           ;main.c: 295: }
  1324                           ;main.c: 297: if (battery_level < 0x01F4) {
  1325  0462  3001               	movlw	1
  1326  0463  0223               	subwf	_battery_level+1,w
  1327  0464  30F4               	movlw	244
  1328  0465  1903               	skipnz
  1329  0466  0222               	subwf	_battery_level,w
  1330  0467  1803               	skipnc
  1331  0468  2C6B               	goto	l1032
  1332                           
  1333                           ;main.c: 298: packet_t[5] |= 0x08;
  1334  0469  15B9               	bsf	_packet_t+5,3
  1335                           
  1336                           ;main.c: 299: } else {
  1337  046A  2C6F               	goto	l1034
  1338  046B                     l1032:	
  1339                           
  1340                           ;main.c: 300: packet_t[5] &= ~0x08;
  1341  046B  30F7               	movlw	247
  1342  046C  00FC               	movwf	??_main
  1343  046D  087C               	movf	??_main,w
  1344  046E  05B9               	andwf	_packet_t+5,f
  1345  046F                     l1034:	
  1346                           
  1347                           ;main.c: 301: }
  1348                           ;main.c: 303: crc12(&packet_t[2], &packet_t[6], 4);
  1349  046F  303A               	movlw	(low ((_packet_t| 0+6)))& (0+255)
  1350  0470  00FC               	movwf	??_main
  1351  0471  087C               	movf	??_main,w
  1352  0472  00F0               	movwf	crc12@outbuf
  1353  0473  3004               	movlw	4
  1354  0474  00FD               	movwf	??_main+1
  1355  0475  087D               	movf	??_main+1,w
  1356  0476  00F1               	movwf	crc12@len
  1357  0477  3036               	movlw	(low ((_packet_t| 0+2)))& (0+255)
  1358  0478  2487               	fcall	_crc12
  1359                           
  1360                           ;main.c: 304: manchester_enc(&packet_t[0], &encman[0], 8);
  1361  0479  3024               	movlw	(low (_encman| 0))& (0+255)
  1362  047A  00FC               	movwf	??_main
  1363  047B  087C               	movf	??_main,w
  1364  047C  00F0               	movwf	manchester_enc@outbuf
  1365  047D  3008               	movlw	8
  1366  047E  00FD               	movwf	??_main+1
  1367  047F  087D               	movf	??_main+1,w
  1368  0480  00F1               	movwf	manchester_enc@len
  1369  0481  3034               	movlw	(low (_packet_t| 0))& (0+255)
  1370  0482  24F8               	fcall	_manchester_enc
  1371                           
  1372                           ;main.c: 305: sendSignal(&encman[0]);
  1373  0483  3024               	movlw	(low (_encman| 0))& (0+255)
  1374  0484  2561               	fcall	_sendSignal
  1375  0485  0063               	sleep	;# 
  1376  0486  2C2F               	goto	l159
  1377  0487                     __end_of_main:	
  1378                           
  1379                           	psect	text1
  1380  0561                     __ptext1:	
  1381 ;; *************** function _sendSignal *****************
  1382 ;; Defined at:
  1383 ;;		line 195 in file "main.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  pt              1    wreg     PTR unsigned char 
  1386 ;;		 -> encman(16), 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  pt              1    6[COMMON] PTR unsigned char 
  1389 ;;		 -> encman(16), 
  1390 ;;  i               1   11[COMMON] unsigned char 
  1391 ;;  old_state       1   10[COMMON] unsigned char 
  1392 ;;  wbyte           1    9[COMMON] unsigned char 
  1393 ;;  n               1    8[COMMON] unsigned char 
  1394 ;;  k               1    7[COMMON] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1404 ;;      Params:         0       0       0       0
  1405 ;;      Locals:         6       0       0       0
  1406 ;;      Temps:          2       0       0       0
  1407 ;;      Totals:         8       0       0       0
  1408 ;;Total ram usage:        8 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; Hardware stack levels required when called:    1
  1411 ;; This function calls:
  1412 ;;		_delay_us
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           
  1419                           ;psect for function _sendSignal
  1420  0561                     _sendSignal:	
  1421                           
  1422                           ;incstack = 0
  1423                           ; Regs used in _sendSignal: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1424                           ;sendSignal@pt stored from wreg
  1425  0561  00F6               	movwf	sendSignal@pt
  1426                           
  1427                           ;main.c: 197: U8 i, k, n;
  1428                           ;main.c: 198: U8 wbyte;
  1429                           ;main.c: 199: U8 old_state = 0;
  1430  0562  01FA               	clrf	sendSignal@old_state
  1431                           
  1432                           ;main.c: 201: for (n = 0; n < 6; n++) {
  1433  0563  01F8               	clrf	sendSignal@n
  1434  0564                     L2:	
  1435  0564  3006               	movlw	6
  1436  0565  0278               	subwf	sendSignal@n,w
  1437  0566  1803               	btfsc	3,0
  1438  0567  0008               	return
  1439                           
  1440                           ;main.c: 202: delay_us(125);
  1441  0568  307D               	movlw	125
  1442  0569  25E0               	fcall	_delay_us
  1443                           
  1444                           ;main.c: 203: (LATAbits.LATA4 = 1);
  1445  056A  0022               	movlb	2	; select bank2
  1446  056B  160C               	bsf	12,4	;volatile
  1447                           
  1448                           ;main.c: 204: delay_us(10);
  1449  056C  300A               	movlw	10
  1450  056D  25E0               	fcall	_delay_us
  1451                           
  1452                           ;main.c: 206: for (i = 0; i < 16 ; i++) {
  1453  056E  01FB               	clrf	sendSignal@i
  1454  056F  3010               	movlw	16
  1455  0570  027B               	subwf	sendSignal@i,w
  1456  0571  1803               	btfsc	3,0
  1457  0572  2DAE               	goto	l978
  1458  0573                     l942:	
  1459                           
  1460                           ;main.c: 207: wbyte = *(pt + i);
  1461  0573  087B               	movf	sendSignal@i,w
  1462  0574  0776               	addwf	sendSignal@pt,w
  1463  0575  00F4               	movwf	??_sendSignal
  1464  0576  0874               	movf	??_sendSignal,w
  1465  0577  0086               	movwf	6
  1466  0578  0187               	clrf	7
  1467  0579  0801               	movf	1,w
  1468  057A  00F5               	movwf	??_sendSignal+1
  1469  057B  0875               	movf	??_sendSignal+1,w
  1470  057C  00F9               	movwf	sendSignal@wbyte
  1471                           
  1472                           ;main.c: 209: for (k = 0; k < 8; k++) {
  1473  057D  01F7               	clrf	sendSignal@k
  1474  057E  3008               	movlw	8
  1475  057F  0277               	subwf	sendSignal@k,w
  1476  0580  1803               	btfsc	3,0
  1477  0581  2DA6               	goto	l974
  1478  0582                     l147:	
  1479                           
  1480                           ;main.c: 210: if (wbyte & 0x80) {
  1481  0582  1FF9               	btfss	sendSignal@wbyte,7
  1482  0583  2D90               	goto	l149
  1483                           
  1484                           ;main.c: 211: (LATAbits.LATA5 = 1);
  1485  0584  0022               	movlb	2	; select bank2
  1486  0585  168C               	bsf	12,5	;volatile
  1487                           
  1488                           ;main.c: 212: delay_us(6);
  1489  0586  3006               	movlw	6
  1490  0587  25E0               	fcall	_delay_us
  1491                           
  1492                           ;main.c: 214: if (old_state) delay_us(5);
  1493  0588  087A               	movf	sendSignal@old_state,w
  1494  0589  1903               	btfsc	3,2
  1495  058A  2D8D               	goto	l958
  1496  058B  3005               	movlw	5
  1497  058C  25E0               	fcall	_delay_us
  1498  058D                     l958:	
  1499                           
  1500                           ;main.c: 216: old_state = 1;
  1501  058D  01FA               	clrf	sendSignal@old_state
  1502  058E  0AFA               	incf	sendSignal@old_state,f
  1503                           
  1504                           ;main.c: 217: } else {
  1505  058F  2D9A               	goto	l968
  1506  0590                     l149:	
  1507                           
  1508                           ;main.c: 218: (LATAbits.LATA5 = 0);
  1509  0590  0022               	movlb	2	; select bank2
  1510  0591  128C               	bcf	12,5	;volatile
  1511                           
  1512                           ;main.c: 219: if (!old_state) delay_us(11);
  1513  0592  087A               	movf	sendSignal@old_state,w
  1514  0593  1D03               	btfss	3,2
  1515  0594  2D97               	goto	l964
  1516  0595  300B               	movlw	11
  1517  0596  2D98               	goto	L1
  1518  0597                     l964:	
  1519                           
  1520                           ;main.c: 220: else delay_us(17);
  1521  0597  3011               	movlw	17
  1522  0598                     L1:	
  1523  0598  25E0               	fcall	_delay_us
  1524                           
  1525                           ;main.c: 222: old_state = 0;
  1526  0599  01FA               	clrf	sendSignal@old_state
  1527  059A                     l968:	
  1528                           
  1529                           ;main.c: 223: }
  1530                           ;main.c: 224: wbyte = (wbyte << 1);
  1531  059A  3579               	lslf	sendSignal@wbyte,w
  1532  059B  00F4               	movwf	??_sendSignal
  1533  059C  0874               	movf	??_sendSignal,w
  1534  059D  00F9               	movwf	sendSignal@wbyte
  1535  059E  3001               	movlw	1
  1536  059F  00F4               	movwf	??_sendSignal
  1537  05A0  0874               	movf	??_sendSignal,w
  1538  05A1  07F7               	addwf	sendSignal@k,f
  1539  05A2  3008               	movlw	8
  1540  05A3  0277               	subwf	sendSignal@k,w
  1541  05A4  1C03               	skipc
  1542  05A5  2D82               	goto	l147
  1543  05A6                     l974:	
  1544  05A6  3001               	movlw	1
  1545  05A7  00F4               	movwf	??_sendSignal
  1546  05A8  0874               	movf	??_sendSignal,w
  1547  05A9  07FB               	addwf	sendSignal@i,f
  1548  05AA  3010               	movlw	16
  1549  05AB  027B               	subwf	sendSignal@i,w
  1550  05AC  1C03               	skipc
  1551  05AD  2D73               	goto	l942
  1552  05AE                     l978:	
  1553                           
  1554                           ;main.c: 225: }
  1555                           ;main.c: 226: }
  1556                           ;main.c: 227: delay_us(10);
  1557  05AE  300A               	movlw	10
  1558  05AF  25E0               	fcall	_delay_us
  1559                           
  1560                           ;main.c: 228: (LATAbits.LATA4 = 0);
  1561  05B0  0022               	movlb	2	; select bank2
  1562  05B1  120C               	bcf	12,4	;volatile
  1563                           
  1564                           ;main.c: 229: for (i = 0; i < 34; i++) delay_us(250);
  1565  05B2  01FB               	clrf	sendSignal@i
  1566  05B3  3022               	movlw	34
  1567  05B4  027B               	subwf	sendSignal@i,w
  1568  05B5  1803               	btfsc	3,0
  1569  05B6  2DC1               	goto	l994
  1570  05B7                     l988:	
  1571  05B7  30FA               	movlw	250
  1572  05B8  25E0               	fcall	_delay_us
  1573  05B9  3001               	movlw	1
  1574  05BA  00F4               	movwf	??_sendSignal
  1575  05BB  0874               	movf	??_sendSignal,w
  1576  05BC  07FB               	addwf	sendSignal@i,f
  1577  05BD  3022               	movlw	34
  1578  05BE  027B               	subwf	sendSignal@i,w
  1579  05BF  1C03               	skipc
  1580  05C0  2DB7               	goto	l988
  1581  05C1                     l994:	
  1582  05C1  3001               	movlw	1
  1583  05C2  00F4               	movwf	??_sendSignal
  1584  05C3  0874               	movf	??_sendSignal,w
  1585  05C4  07F8               	addwf	sendSignal@n,f
  1586  05C5  2D64               	goto	L2
  1587  05C6                     __end_of_sendSignal:	
  1588                           
  1589                           	psect	text2
  1590  05E0                     __ptext2:	
  1591 ;; *************** function _delay_us *****************
  1592 ;; Defined at:
  1593 ;;		line 184 in file "main.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  delay           1    wreg     unsigned char 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  delay           1    1[COMMON] unsigned char 
  1598 ;;  k               1    3[COMMON] unsigned char 
  1599 ;;  i               1    2[COMMON] unsigned char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1609 ;;      Params:         0       0       0       0
  1610 ;;      Locals:         3       0       0       0
  1611 ;;      Temps:          1       0       0       0
  1612 ;;      Totals:         4       0       0       0
  1613 ;;Total ram usage:        4 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_sendSignal
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           
  1623                           ;psect for function _delay_us
  1624  05E0                     _delay_us:	
  1625                           
  1626                           ;incstack = 0
  1627                           ; Regs used in _delay_us: [wreg+status,2+status,0]
  1628                           ;delay_us@delay stored from wreg
  1629  05E0  00F1               	movwf	delay_us@delay
  1630                           
  1631                           ;main.c: 186: U8 i, k;
  1632                           ;main.c: 188: for (i = 0; i < delay; i++)
  1633  05E1  01F2               	clrf	delay_us@i
  1634  05E2                     l846:	
  1635  05E2  0871               	movf	delay_us@delay,w
  1636  05E3  0272               	subwf	delay_us@i,w
  1637  05E4  1803               	btfsc	3,0
  1638  05E5  0008               	return
  1639                           
  1640                           ;main.c: 189: for (k = 0; k < 1; k++)
  1641  05E6  01F3               	clrf	delay_us@k
  1642  05E7  0873               	movf	delay_us@k,w
  1643  05E8  1D03               	btfss	3,2
  1644  05E9  2DF2               	goto	l844
  1645  05EA                     l137:	
  1646                           
  1647                           ;main.c: 190: {
  1648                           ;main.c: 191: __nop();
  1649  05EA  0000               	nop
  1650  05EB  3001               	movlw	1
  1651  05EC  00F0               	movwf	??_delay_us
  1652  05ED  0870               	movf	??_delay_us,w
  1653  05EE  07F3               	addwf	delay_us@k,f
  1654  05EF  0873               	movf	delay_us@k,w
  1655  05F0  1903               	btfsc	3,2
  1656  05F1  2DEA               	goto	l137
  1657  05F2                     l844:	
  1658  05F2  3001               	movlw	1
  1659  05F3  00F0               	movwf	??_delay_us
  1660  05F4  0870               	movf	??_delay_us,w
  1661  05F5  07F2               	addwf	delay_us@i,f
  1662  05F6  2DE2               	goto	l846
  1663  05F7                     __end_of_delay_us:	
  1664                           
  1665                           	psect	text3
  1666  04F8                     __ptext3:	
  1667 ;; *************** function _manchester_enc *****************
  1668 ;; Defined at:
  1669 ;;		line 107 in file "main.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  inbuf           1    wreg     PTR unsigned char 
  1672 ;;		 -> packet_t(8), 
  1673 ;;  outbuf          1    0[COMMON] PTR unsigned char 
  1674 ;;		 -> encman(16), 
  1675 ;;  len             1    1[COMMON] unsigned char 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  inbuf           1    4[COMMON] PTR unsigned char 
  1678 ;;		 -> packet_t(8), 
  1679 ;;  i               1   10[COMMON] unsigned char 
  1680 ;;  tbyte           1    9[COMMON] unsigned char 
  1681 ;;  lbyte           1    8[COMMON] unsigned char 
  1682 ;;  hbyte           1    7[COMMON] unsigned char 
  1683 ;;  outbuf_idx      1    6[COMMON] unsigned char 
  1684 ;;  k               1    5[COMMON] unsigned char 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1694 ;;      Params:         2       0       0       0
  1695 ;;      Locals:         7       0       0       0
  1696 ;;      Temps:          2       0       0       0
  1697 ;;      Totals:        11       0       0       0
  1698 ;;Total ram usage:       11 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_main
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function _manchester_enc
  1709  04F8                     _manchester_enc:	
  1710                           
  1711                           ;incstack = 0
  1712                           ; Regs used in _manchester_enc: [wreg+fsr1l+fsr1h+status,2+status,0]
  1713                           ;manchester_enc@inbuf stored from wreg
  1714  04F8  00F4               	movwf	manchester_enc@inbuf
  1715                           
  1716                           ;main.c: 109: U8 i, k;
  1717                           ;main.c: 110: U8 outbuf_idx = 0;
  1718  04F9  01F6               	clrf	manchester_enc@outbuf_idx
  1719                           
  1720                           ;main.c: 111: U8 hbyte, lbyte;
  1721                           ;main.c: 112: U8 tbyte;
  1722                           ;main.c: 114: for (k = 0; k < len; k++)
  1723  04FA  01F5               	clrf	manchester_enc@k
  1724  04FB                     l896:	
  1725  04FB  0871               	movf	manchester_enc@len,w
  1726  04FC  0275               	subwf	manchester_enc@k,w
  1727  04FD  1803               	btfsc	3,0
  1728  04FE  0008               	return
  1729                           
  1730                           ;main.c: 115: {
  1731                           ;main.c: 116: hbyte = 0x00;
  1732  04FF  01F7               	clrf	manchester_enc@hbyte
  1733                           
  1734                           ;main.c: 117: lbyte = 0x00;
  1735  0500  01F8               	clrf	manchester_enc@lbyte
  1736                           
  1737                           ;main.c: 118: tbyte = *(inbuf + k);
  1738  0501  0875               	movf	manchester_enc@k,w
  1739  0502  0774               	addwf	manchester_enc@inbuf,w
  1740  0503  00F2               	movwf	??_manchester_enc
  1741  0504  0872               	movf	??_manchester_enc,w
  1742  0505  0086               	movwf	6
  1743  0506  0187               	clrf	7
  1744  0507  0801               	movf	1,w
  1745  0508  00F3               	movwf	??_manchester_enc+1
  1746  0509  0873               	movf	??_manchester_enc+1,w
  1747  050A  00F9               	movwf	manchester_enc@tbyte
  1748                           
  1749                           ;main.c: 120: for (i = 0; i < 4; i++)
  1750  050B  01FA               	clrf	manchester_enc@i
  1751  050C  3004               	movlw	4
  1752  050D  027A               	subwf	manchester_enc@i,w
  1753  050E  1803               	btfsc	3,0
  1754  050F  2D44               	goto	l890
  1755  0510                     l113:	
  1756                           
  1757                           ;main.c: 121: {
  1758                           ;main.c: 122: if (tbyte & 0x80)
  1759  0510  1FF9               	btfss	manchester_enc@tbyte,7
  1760  0511  2D14               	goto	l115
  1761                           
  1762                           ;main.c: 123: {
  1763                           ;main.c: 124: hbyte |= 0x01;
  1764  0512  1477               	bsf	manchester_enc@hbyte,0
  1765                           
  1766                           ;main.c: 125: }
  1767  0513  2D15               	goto	l876
  1768  0514                     l115:	
  1769                           
  1770                           ;main.c: 126: else
  1771                           ;main.c: 127: {
  1772                           ;main.c: 128: hbyte |= 0x02;
  1773  0514  14F7               	bsf	manchester_enc@hbyte,1
  1774  0515                     l876:	
  1775                           
  1776                           ;main.c: 129: }
  1777                           ;main.c: 131: if (i < 3)
  1778  0515  3003               	movlw	3
  1779  0516  027A               	subwf	manchester_enc@i,w
  1780  0517  1803               	skipnc
  1781  0518  2D24               	goto	l880
  1782                           
  1783                           ;main.c: 132: hbyte = (hbyte << 2);
  1784  0519  0877               	movf	manchester_enc@hbyte,w
  1785  051A  00F2               	movwf	??_manchester_enc
  1786  051B  3001               	movlw	1
  1787  051C                     u405:	
  1788  051C  35F2               	lslf	??_manchester_enc,f
  1789  051D  3EFF               	addlw	-1
  1790  051E  1D03               	skipz
  1791  051F  2D1C               	goto	u405
  1792  0520  3572               	lslf	??_manchester_enc,w
  1793  0521  00F3               	movwf	??_manchester_enc+1
  1794  0522  0873               	movf	??_manchester_enc+1,w
  1795  0523  00F7               	movwf	manchester_enc@hbyte
  1796  0524                     l880:	
  1797                           
  1798                           ;main.c: 134: if (tbyte & 0x08)
  1799  0524  1DF9               	btfss	manchester_enc@tbyte,3
  1800  0525  2D28               	goto	l118
  1801                           
  1802                           ;main.c: 135: {
  1803                           ;main.c: 136: lbyte |= 0x01;
  1804  0526  1478               	bsf	manchester_enc@lbyte,0
  1805                           
  1806                           ;main.c: 137: }
  1807  0527  2D29               	goto	l884
  1808  0528                     l118:	
  1809                           
  1810                           ;main.c: 138: else
  1811                           ;main.c: 139: {
  1812                           ;main.c: 140: lbyte |= 0x02;
  1813  0528  14F8               	bsf	manchester_enc@lbyte,1
  1814  0529                     l884:	
  1815                           
  1816                           ;main.c: 141: }
  1817                           ;main.c: 142: if (i < 3)
  1818  0529  3003               	movlw	3
  1819  052A  027A               	subwf	manchester_enc@i,w
  1820  052B  1803               	skipnc
  1821  052C  2D38               	goto	l120
  1822                           
  1823                           ;main.c: 143: lbyte = (lbyte << 2);
  1824  052D  0878               	movf	manchester_enc@lbyte,w
  1825  052E  00F2               	movwf	??_manchester_enc
  1826  052F  3001               	movlw	1
  1827  0530                     u435:	
  1828  0530  35F2               	lslf	??_manchester_enc,f
  1829  0531  3EFF               	addlw	-1
  1830  0532  1D03               	skipz
  1831  0533  2D30               	goto	u435
  1832  0534  3572               	lslf	??_manchester_enc,w
  1833  0535  00F3               	movwf	??_manchester_enc+1
  1834  0536  0873               	movf	??_manchester_enc+1,w
  1835  0537  00F8               	movwf	manchester_enc@lbyte
  1836  0538                     l120:	
  1837                           
  1838                           ;main.c: 145: tbyte = (tbyte << 1);
  1839  0538  3579               	lslf	manchester_enc@tbyte,w
  1840  0539  00F2               	movwf	??_manchester_enc
  1841  053A  0872               	movf	??_manchester_enc,w
  1842  053B  00F9               	movwf	manchester_enc@tbyte
  1843  053C  3001               	movlw	1
  1844  053D  00F2               	movwf	??_manchester_enc
  1845  053E  0872               	movf	??_manchester_enc,w
  1846  053F  07FA               	addwf	manchester_enc@i,f
  1847  0540  3004               	movlw	4
  1848  0541  027A               	subwf	manchester_enc@i,w
  1849  0542  1C03               	skipc
  1850  0543  2D10               	goto	l113
  1851  0544                     l890:	
  1852                           
  1853                           ;main.c: 146: }
  1854                           ;main.c: 148: *(outbuf + outbuf_idx) = hbyte;
  1855  0544  0877               	movf	manchester_enc@hbyte,w
  1856  0545  00F2               	movwf	??_manchester_enc
  1857  0546  0876               	movf	manchester_enc@outbuf_idx,w
  1858  0547  0770               	addwf	manchester_enc@outbuf,w
  1859  0548  00F3               	movwf	??_manchester_enc+1
  1860  0549  0873               	movf	??_manchester_enc+1,w
  1861  054A  0086               	movwf	6
  1862  054B  0187               	clrf	7
  1863  054C  0872               	movf	??_manchester_enc,w
  1864  054D  0081               	movwf	1
  1865                           
  1866                           ;main.c: 149: *(outbuf + outbuf_idx + 1) = lbyte;
  1867  054E  0878               	movf	manchester_enc@lbyte,w
  1868  054F  00F2               	movwf	??_manchester_enc
  1869  0550  0876               	movf	manchester_enc@outbuf_idx,w
  1870  0551  0770               	addwf	manchester_enc@outbuf,w
  1871  0552  00F3               	movwf	??_manchester_enc+1
  1872  0553  0A73               	incf	??_manchester_enc+1,w
  1873  0554  0086               	movwf	6
  1874  0555  0187               	clrf	7
  1875  0556  0872               	movf	??_manchester_enc,w
  1876  0557  0081               	movwf	1
  1877                           
  1878                           ;main.c: 150: outbuf_idx += 2;
  1879  0558  3002               	movlw	2
  1880  0559  00F2               	movwf	??_manchester_enc
  1881  055A  0872               	movf	??_manchester_enc,w
  1882  055B  07F6               	addwf	manchester_enc@outbuf_idx,f
  1883  055C  3001               	movlw	1
  1884  055D  00F2               	movwf	??_manchester_enc
  1885  055E  0872               	movf	??_manchester_enc,w
  1886  055F  07F5               	addwf	manchester_enc@k,f
  1887  0560  2CFB               	goto	l896
  1888  0561                     __end_of_manchester_enc:	
  1889                           
  1890                           	psect	text4
  1891  0487                     __ptext4:	
  1892 ;; *************** function _crc12 *****************
  1893 ;; Defined at:
  1894 ;;		line 154 in file "main.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  inbuf           1    wreg     PTR unsigned char 
  1897 ;;		 -> packet_t(8), 
  1898 ;;  outbuf          1    0[COMMON] PTR unsigned char 
  1899 ;;		 -> packet_t(8), 
  1900 ;;  len             1    1[COMMON] unsigned char 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  inbuf           1    7[COMMON] PTR unsigned char 
  1903 ;;		 -> packet_t(8), 
  1904 ;;  crc             2   10[COMMON] unsigned int 
  1905 ;;  inbuf_t         2    5[COMMON] unsigned int 
  1906 ;;  k               1    9[COMMON] unsigned char 
  1907 ;;  i               1    8[COMMON] unsigned char 
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1917 ;;      Params:         2       0       0       0
  1918 ;;      Locals:         7       0       0       0
  1919 ;;      Temps:          3       0       0       0
  1920 ;;      Totals:        12       0       0       0
  1921 ;;Total ram usage:       12 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_main
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           
  1931                           ;psect for function _crc12
  1932  0487                     _crc12:	
  1933                           
  1934                           ;incstack = 0
  1935                           ; Regs used in _crc12: [wreg+fsr1l+fsr1h+status,2+status,0]
  1936                           ;crc12@inbuf stored from wreg
  1937  0487  00F7               	movwf	crc12@inbuf
  1938                           
  1939                           ;main.c: 156: U16 crc = 0;
  1940  0488  01FA               	clrf	crc12@crc
  1941  0489  01FB               	clrf	crc12@crc+1
  1942                           
  1943                           ;main.c: 157: U16 inbuf_t;
  1944                           ;main.c: 158: U8 i, k;
  1945                           ;main.c: 160: for (i = 0; i < len; i++)
  1946  048A  01F8               	clrf	crc12@i
  1947  048B                     l918:	
  1948  048B  0871               	movf	crc12@len,w
  1949  048C  0278               	subwf	crc12@i,w
  1950  048D  1803               	btfsc	3,0
  1951  048E  2CD8               	goto	l920
  1952                           
  1953                           ;main.c: 161: {
  1954                           ;main.c: 162: inbuf_t = *(inbuf +i);
  1955  048F  0878               	movf	crc12@i,w
  1956  0490  0777               	addwf	crc12@inbuf,w
  1957  0491  00F2               	movwf	??_crc12
  1958  0492  0872               	movf	??_crc12,w
  1959  0493  0086               	movwf	6
  1960  0494  0187               	clrf	7
  1961  0495  0801               	movf	1,w
  1962  0496  00F3               	movwf	??_crc12+1
  1963  0497  01F4               	clrf	??_crc12+2
  1964  0498  0873               	movf	??_crc12+1,w
  1965  0499  00F5               	movwf	crc12@inbuf_t
  1966  049A  0874               	movf	??_crc12+2,w
  1967  049B  00F6               	movwf	crc12@inbuf_t+1
  1968                           
  1969                           ;main.c: 163: crc ^= inbuf_t << 4;
  1970  049C  0876               	movf	crc12@inbuf_t+1,w
  1971  049D  00F3               	movwf	??_crc12+1
  1972  049E  0875               	movf	crc12@inbuf_t,w
  1973  049F  00F2               	movwf	??_crc12
  1974  04A0  0EF2               	swapf	??_crc12,f
  1975  04A1  0EF3               	swapf	??_crc12+1,f
  1976  04A2  30F0               	movlw	240
  1977  04A3  05F3               	andwf	??_crc12+1,f
  1978  04A4  0872               	movf	??_crc12,w
  1979  04A5  390F               	andlw	15
  1980  04A6  04F3               	iorwf	??_crc12+1,f
  1981  04A7  30F0               	movlw	240
  1982  04A8  05F2               	andwf	??_crc12,f
  1983  04A9  0872               	movf	??_crc12,w
  1984  04AA  06FA               	xorwf	crc12@crc,f
  1985  04AB  0873               	movf	??_crc12+1,w
  1986  04AC  06FB               	xorwf	crc12@crc+1,f
  1987                           
  1988                           ;main.c: 165: for (k = 0; k < 8; k++)
  1989  04AD  01F9               	clrf	crc12@k
  1990  04AE  3008               	movlw	8
  1991  04AF  0279               	subwf	crc12@k,w
  1992  04B0  1803               	btfsc	3,0
  1993  04B1  2CD3               	goto	l916
  1994  04B2                     l127:	
  1995                           
  1996                           ;main.c: 166: {
  1997                           ;main.c: 167: if (crc & 0x800)
  1998  04B2  1DFB               	btfss	crc12@crc+1,3
  1999  04B3  2CBF               	goto	l912
  2000                           
  2001                           ;main.c: 168: {
  2002                           ;main.c: 169: crc = crc << 1;
  2003  04B4  357A               	lslf	crc12@crc,w
  2004  04B5  00FA               	movwf	crc12@crc
  2005  04B6  0D7B               	rlf	crc12@crc+1,w
  2006  04B7  00FB               	movwf	crc12@crc+1
  2007                           
  2008                           ;main.c: 170: crc = (crc ^ 0x805) & 0xFFF;
  2009  04B8  3005               	movlw	5
  2010  04B9  067A               	xorwf	crc12@crc,w
  2011  04BA  00F2               	movwf	??_crc12
  2012  04BB  3008               	movlw	8
  2013  04BC  067B               	xorwf	crc12@crc+1,w
  2014  04BD  00F3               	movwf	??_crc12+1
  2015  04BE  2CC5               	goto	L3
  2016  04BF                     l912:	
  2017                           ;main.c: 171: }
  2018                           
  2019                           
  2020                           ;main.c: 172: else
  2021                           ;main.c: 173: {
  2022                           ;main.c: 174: crc = (crc << 1) & 0xFFF;
  2023  04BF  087B               	movf	crc12@crc+1,w
  2024  04C0  00F3               	movwf	??_crc12+1
  2025  04C1  087A               	movf	crc12@crc,w
  2026  04C2  00F2               	movwf	??_crc12
  2027  04C3  35F2               	lslf	??_crc12,f
  2028  04C4  0DF3               	rlf	??_crc12+1,f
  2029  04C5                     L3:	
  2030  04C5  30FF               	movlw	255
  2031  04C6  0572               	andwf	??_crc12,w
  2032  04C7  00FA               	movwf	crc12@crc
  2033  04C8  300F               	movlw	15
  2034  04C9  0573               	andwf	??_crc12+1,w
  2035  04CA  00FB               	movwf	crc12@crc+1
  2036  04CB  3001               	movlw	1
  2037  04CC  00F2               	movwf	??_crc12
  2038  04CD  0872               	movf	??_crc12,w
  2039  04CE  07F9               	addwf	crc12@k,f
  2040  04CF  3008               	movlw	8
  2041  04D0  0279               	subwf	crc12@k,w
  2042  04D1  1C03               	skipc
  2043  04D2  2CB2               	goto	l127
  2044  04D3                     l916:	
  2045  04D3  3001               	movlw	1
  2046  04D4  00F2               	movwf	??_crc12
  2047  04D5  0872               	movf	??_crc12,w
  2048  04D6  07F8               	addwf	crc12@i,f
  2049  04D7  2C8B               	goto	l918
  2050  04D8                     l920:	
  2051                           
  2052                           ;main.c: 175: }
  2053                           ;main.c: 176: }
  2054                           ;main.c: 177: }
  2055                           ;main.c: 179: crc = (crc << 4);
  2056  04D8  087B               	movf	crc12@crc+1,w
  2057  04D9  00F3               	movwf	??_crc12+1
  2058  04DA  087A               	movf	crc12@crc,w
  2059  04DB  00F2               	movwf	??_crc12
  2060  04DC  0EF2               	swapf	??_crc12,f
  2061  04DD  0EF3               	swapf	??_crc12+1,f
  2062  04DE  30F0               	movlw	240
  2063  04DF  05F3               	andwf	??_crc12+1,f
  2064  04E0  0872               	movf	??_crc12,w
  2065  04E1  390F               	andlw	15
  2066  04E2  04F3               	iorwf	??_crc12+1,f
  2067  04E3  30F0               	movlw	240
  2068  04E4  05F2               	andwf	??_crc12,f
  2069  04E5  0872               	movf	??_crc12,w
  2070  04E6  00FA               	movwf	crc12@crc
  2071  04E7  0873               	movf	??_crc12+1,w
  2072  04E8  00FB               	movwf	crc12@crc+1
  2073                           
  2074                           ;main.c: 180: *outbuf = (U8)(crc >> 8);
  2075  04E9  087B               	movf	crc12@crc+1,w
  2076  04EA  00F2               	movwf	??_crc12
  2077  04EB  0870               	movf	crc12@outbuf,w
  2078  04EC  0086               	movwf	6
  2079  04ED  0187               	clrf	7
  2080  04EE  0872               	movf	??_crc12,w
  2081  04EF  0081               	movwf	1
  2082                           
  2083                           ;main.c: 181: *(outbuf + 1) = (U8)crc;
  2084  04F0  087A               	movf	crc12@crc,w
  2085  04F1  00F2               	movwf	??_crc12
  2086  04F2  0A70               	incf	crc12@outbuf,w
  2087  04F3  0086               	movwf	6
  2088  04F4  0187               	clrf	7
  2089  04F5  0872               	movf	??_crc12,w
  2090  04F6  0081               	movwf	1
  2091  04F7  0008               	return
  2092  04F8                     __end_of_crc12:	
  2093                           
  2094                           	psect	text5
  2095  0624                     __ptext5:	
  2096 ;; *************** function _SYSTEM_Initialize *****************
  2097 ;; Defined at:
  2098 ;;		line 67 in file "mcc_generated_files/mcc.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2112 ;;      Params:         0       0       0       0
  2113 ;;      Locals:         0       0       0       0
  2114 ;;      Temps:          0       0       0       0
  2115 ;;      Totals:         0       0       0       0
  2116 ;;Total ram usage:        0 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    1
  2119 ;; This function calls:
  2120 ;;		_ADC1_Initialize
  2121 ;;		_FVR_Initialize
  2122 ;;		_OSCILLATOR_Initialize
  2123 ;;		_PIN_MANAGER_Initialize
  2124 ;;		_WDT_Initialize
  2125 ;; This function is called by:
  2126 ;;		_main
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           
  2131                           ;psect for function _SYSTEM_Initialize
  2132  0624                     _SYSTEM_Initialize:	
  2133                           
  2134                           ;mcc.c: 70: PIN_MANAGER_Initialize();
  2135                           
  2136                           ;incstack = 0
  2137                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2138  0624  25F7               	fcall	_PIN_MANAGER_Initialize
  2139                           
  2140                           ;mcc.c: 71: OSCILLATOR_Initialize();
  2141  0625  262A               	fcall	_OSCILLATOR_Initialize
  2142                           
  2143                           ;mcc.c: 72: WDT_Initialize();
  2144  0626  262F               	fcall	_WDT_Initialize
  2145                           
  2146                           ;mcc.c: 73: ADC1_Initialize();
  2147  0627  2607               	fcall	_ADC1_Initialize
  2148                           
  2149                           ;mcc.c: 74: FVR_Initialize();
  2150  0628  2633               	fcall	_FVR_Initialize
  2151  0629  0008               	return
  2152  062A                     __end_of_SYSTEM_Initialize:	
  2153                           
  2154                           	psect	text6
  2155  062F                     __ptext6:	
  2156 ;; *************** function _WDT_Initialize *****************
  2157 ;; Defined at:
  2158 ;;		line 87 in file "mcc_generated_files/mcc.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2172 ;;      Params:         0       0       0       0
  2173 ;;      Locals:         0       0       0       0
  2174 ;;      Temps:          0       0       0       0
  2175 ;;      Totals:         0       0       0       0
  2176 ;;Total ram usage:        0 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_SYSTEM_Initialize
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           
  2186                           ;psect for function _WDT_Initialize
  2187  062F                     _WDT_Initialize:	
  2188                           
  2189                           ;mcc.c: 90: WDTCON = 0x14;
  2190                           
  2191                           ;incstack = 0
  2192                           ; Regs used in _WDT_Initialize: [wreg]
  2193  062F  3014               	movlw	20
  2194  0630  0021               	movlb	1	; select bank1
  2195  0631  0097               	movwf	23	;volatile
  2196  0632  0008               	return
  2197  0633                     __end_of_WDT_Initialize:	
  2198                           
  2199                           	psect	text7
  2200  05F7                     __ptext7:	
  2201 ;; *************** function _PIN_MANAGER_Initialize *****************
  2202 ;; Defined at:
  2203 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2217 ;;      Params:         0       0       0       0
  2218 ;;      Locals:         0       0       0       0
  2219 ;;      Temps:          0       0       0       0
  2220 ;;      Totals:         0       0       0       0
  2221 ;;Total ram usage:        0 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_SYSTEM_Initialize
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           
  2231                           ;psect for function _PIN_MANAGER_Initialize
  2232  05F7                     _PIN_MANAGER_Initialize:	
  2233                           
  2234                           ;pin_manager.c: 56: LATA = 0x00;
  2235                           
  2236                           ;incstack = 0
  2237                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2238  05F7  0022               	movlb	2	; select bank2
  2239  05F8  018C               	clrf	12	;volatile
  2240                           
  2241                           ;pin_manager.c: 61: TRISA = 0x0F;
  2242  05F9  300F               	movlw	15
  2243  05FA  0021               	movlb	1	; select bank1
  2244  05FB  008C               	movwf	12	;volatile
  2245                           
  2246                           ;pin_manager.c: 66: ANSELA = 0x14;
  2247  05FC  3014               	movlw	20
  2248  05FD  0023               	movlb	3	; select bank3
  2249  05FE  008C               	movwf	12	;volatile
  2250                           
  2251                           ;pin_manager.c: 71: WPUA = 0x3F;
  2252  05FF  303F               	movlw	63
  2253  0600  0024               	movlb	4	; select bank4
  2254  0601  008C               	movwf	12	;volatile
  2255                           
  2256                           ;pin_manager.c: 72: OPTION_REGbits.nWPUEN = 0;
  2257  0602  0021               	movlb	1	; select bank1
  2258  0603  1395               	bcf	21,7	;volatile
  2259                           
  2260                           ;pin_manager.c: 78: APFCON = 0x00;
  2261  0604  0022               	movlb	2	; select bank2
  2262  0605  019D               	clrf	29	;volatile
  2263  0606  0008               	return
  2264  0607                     __end_of_PIN_MANAGER_Initialize:	
  2265                           
  2266                           	psect	text8
  2267  062A                     __ptext8:	
  2268 ;; *************** function _OSCILLATOR_Initialize *****************
  2269 ;; Defined at:
  2270 ;;		line 77 in file "mcc_generated_files/mcc.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2284 ;;      Params:         0       0       0       0
  2285 ;;      Locals:         0       0       0       0
  2286 ;;      Temps:          0       0       0       0
  2287 ;;      Totals:         0       0       0       0
  2288 ;;Total ram usage:        0 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_SYSTEM_Initialize
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           
  2298                           ;psect for function _OSCILLATOR_Initialize
  2299  062A                     _OSCILLATOR_Initialize:	
  2300                           
  2301                           ;mcc.c: 80: OSCCON = 0x72;
  2302                           
  2303                           ;incstack = 0
  2304                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2305  062A  3072               	movlw	114
  2306  062B  0021               	movlb	1	; select bank1
  2307  062C  0099               	movwf	25	;volatile
  2308                           
  2309                           ;mcc.c: 82: OSCTUNE = 0x00;
  2310  062D  0198               	clrf	24	;volatile
  2311  062E  0008               	return
  2312  062F                     __end_of_OSCILLATOR_Initialize:	
  2313                           
  2314                           	psect	text9
  2315  0633                     __ptext9:	
  2316 ;; *************** function _FVR_Initialize *****************
  2317 ;; Defined at:
  2318 ;;		line 57 in file "mcc_generated_files/fvr.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;		None
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;		None
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      void 
  2325 ;; Registers used:
  2326 ;;		wreg
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2332 ;;      Params:         0       0       0       0
  2333 ;;      Locals:         0       0       0       0
  2334 ;;      Temps:          0       0       0       0
  2335 ;;      Totals:         0       0       0       0
  2336 ;;Total ram usage:        0 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_SYSTEM_Initialize
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           
  2346                           ;psect for function _FVR_Initialize
  2347  0633                     _FVR_Initialize:	
  2348                           
  2349                           ;fvr.c: 60: FVRCON = 0x82;
  2350                           
  2351                           ;incstack = 0
  2352                           ; Regs used in _FVR_Initialize: [wreg]
  2353  0633  3082               	movlw	130
  2354  0634  0022               	movlb	2	; select bank2
  2355  0635  0097               	movwf	23	;volatile
  2356  0636  0008               	return
  2357  0637                     __end_of_FVR_Initialize:	
  2358                           
  2359                           	psect	text10
  2360  0607                     __ptext10:	
  2361 ;; *************** function _ADC1_Initialize *****************
  2362 ;; Defined at:
  2363 ;;		line 64 in file "mcc_generated_files/adc1.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;		None
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;		None
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  1    wreg      void 
  2370 ;; Registers used:
  2371 ;;		wreg, status,2
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2377 ;;      Params:         0       0       0       0
  2378 ;;      Locals:         0       0       0       0
  2379 ;;      Temps:          0       0       0       0
  2380 ;;      Totals:         0       0       0       0
  2381 ;;Total ram usage:        0 bytes
  2382 ;; Hardware stack levels used:    1
  2383 ;; This function calls:
  2384 ;;		Nothing
  2385 ;; This function is called by:
  2386 ;;		_SYSTEM_Initialize
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           
  2391                           ;psect for function _ADC1_Initialize
  2392  0607                     _ADC1_Initialize:	
  2393                           
  2394                           ;adc1.c: 69: ADCON0 = 0x08;
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
  2398  0607  3008               	movlw	8
  2399  0608  0021               	movlb	1	; select bank1
  2400  0609  009D               	movwf	29	;volatile
  2401                           
  2402                           ;adc1.c: 72: ADCON1 = 0x83;
  2403  060A  3083               	movlw	131
  2404  060B  009E               	movwf	30	;volatile
  2405                           
  2406                           ;adc1.c: 75: ADCON2 = 0x00;
  2407  060C  019F               	clrf	31	;volatile
  2408                           
  2409                           ;adc1.c: 78: ADRESL = 0x00;
  2410  060D  019B               	clrf	27	;volatile
  2411                           
  2412                           ;adc1.c: 81: ADRESH = 0x00;
  2413  060E  019C               	clrf	28	;volatile
  2414  060F  0008               	return
  2415  0610                     __end_of_ADC1_Initialize:	
  2416                           
  2417                           	psect	text11
  2418  05C6                     __ptext11:	
  2419 ;; *************** function _ADC1_GetConversion *****************
  2420 ;; Defined at:
  2421 ;;		line 112 in file "mcc_generated_files/adc1.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  channel         1    wreg     enum E3512
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  channel         1    3[COMMON] enum E3512
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  2    0[COMMON] unsigned int 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2435 ;;      Params:         2       0       0       0
  2436 ;;      Locals:         1       0       0       0
  2437 ;;      Temps:          1       0       0       0
  2438 ;;      Totals:         4       0       0       0
  2439 ;;Total ram usage:        4 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_main
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function _ADC1_GetConversion
  2450  05C6                     _ADC1_GetConversion:	
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in _ADC1_GetConversion: [wreg+status,2+status,0]
  2454                           ;ADC1_GetConversion@channel stored from wreg
  2455  05C6  00F3               	movwf	ADC1_GetConversion@channel
  2456                           
  2457                           ;adc1.c: 115: ADCON0bits.CHS = channel;
  2458  05C7  0873               	movf	ADC1_GetConversion@channel,w
  2459  05C8  00F2               	movwf	??_ADC1_GetConversion
  2460  05C9  0DF2               	rlf	??_ADC1_GetConversion,f
  2461  05CA  0DF2               	rlf	??_ADC1_GetConversion,f
  2462  05CB  0021               	movlb	1	; select bank1
  2463  05CC  081D               	movf	29,w	;volatile
  2464  05CD  0672               	xorwf	??_ADC1_GetConversion,w
  2465  05CE  3983               	andlw	-125
  2466  05CF  0672               	xorwf	??_ADC1_GetConversion,w
  2467  05D0  009D               	movwf	29	;volatile
  2468                           
  2469                           ;adc1.c: 118: ADCON0bits.ADON = 1;
  2470  05D1  141D               	bsf	29,0	;volatile
  2471                           
  2472                           ;adc1.c: 120: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2473  05D2  3003               	movlw	3
  2474  05D3  00F2               	movwf	??_ADC1_GetConversion
  2475  05D4                     u657:	
  2476  05D4  0BF2               	decfsz	??_ADC1_GetConversion,f
  2477  05D5  2DD4               	goto	u657
  2478                           
  2479                           ;adc1.c: 123: ADCON0bits.GO_nDONE = 1;
  2480  05D6  0021               	movlb	1	; select bank1
  2481  05D7  149D               	bsf	29,1	;volatile
  2482  05D8                     l75:	
  2483                           ;adc1.c: 127: {
  2484                           
  2485                           ;adc1.c: 126: while (ADCON0bits.GO_nDONE)
  2486                           
  2487  05D8  189D               	btfsc	29,1	;volatile
  2488  05D9  2DD8               	goto	l75
  2489                           
  2490                           ;adc1.c: 128: }
  2491                           ;adc1.c: 131: ADCON0bits.ADON = 0;
  2492  05DA  101D               	bcf	29,0	;volatile
  2493                           
  2494                           ;adc1.c: 134: return ((ADRESH << 8) + ADRESL);
  2495  05DB  081C               	movf	28,w	;volatile
  2496  05DC  00F1               	movwf	?_ADC1_GetConversion+1
  2497  05DD  081B               	movf	27,w	;volatile
  2498  05DE  00F0               	movwf	?_ADC1_GetConversion
  2499  05DF  0008               	return
  2500  05E0                     __end_of_ADC1_GetConversion:	
  2501  007E                     btemp	set	126	;btemp
  2502  007E                     wtemp	set	126
  2503  007E                     wtemp0	set	126
  2504  0080                     wtemp1	set	128
  2505  0082                     wtemp2	set	130
  2506  0084                     wtemp3	set	132
  2507  0086                     wtemp4	set	134
  2508  0088                     wtemp5	set	136
  2509  007F                     wtemp6	set	127
  2510  007E                     ttemp	set	126
  2511  007E                     ttemp0	set	126
  2512  0081                     ttemp1	set	129
  2513  0084                     ttemp2	set	132
  2514  0087                     ttemp3	set	135
  2515  007F                     ttemp4	set	127
  2516  007E                     ltemp	set	126
  2517  007E                     ltemp0	set	126
  2518  0082                     ltemp1	set	130
  2519  0086                     ltemp2	set	134
  2520  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      1      29
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    sendSignal@pt	PTR unsigned char  size(1) Largest target is 16
		 -> encman(BANK0[16]), 

    crc12@outbuf	PTR unsigned char  size(1) Largest target is 8
		 -> packet_t(BANK0[8]), 

    crc12@inbuf	PTR unsigned char  size(1) Largest target is 8
		 -> packet_t(BANK0[8]), 

    manchester_enc@outbuf	PTR unsigned char  size(1) Largest target is 16
		 -> encman(BANK0[16]), 

    manchester_enc@inbuf	PTR unsigned char  size(1) Largest target is 8
		 -> packet_t(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_crc12
    _main->_sendSignal
    _sendSignal->_delay_us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1603
                                             12 COMMON     2     2      0
                                              0 BANK0      1     1      0
                 _ADC1_GetConversion
                  _SYSTEM_Initialize
                              _crc12
                     _manchester_enc
                         _sendSignal
 ---------------------------------------------------------------------------------
 (1) _sendSignal                                           8     8      0     443
                                              4 COMMON     8     8      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _delay_us                                             4     4      0      92
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _manchester_enc                                      11     9      2     592
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (1) _crc12                                               12    10      2     521
                                              0 COMMON    12    10      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ADC1_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC1_GetConversion                                   4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC1_GetConversion
   _SYSTEM_Initialize
     _ADC1_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _crc12
   _manchester_enc
   _sendSignal
     _delay_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      1      1D       6       36.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      2B      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Jan 04 08:41:37 2017

                    __CFG_CP$OFF 0000                               l75 05D8           __end_of_FVR_Initialize 0637  
     __end_of_ADC1_GetConversion 05E0                      __CFG_LVP$ON 0000                              l120 0538  
                            l113 0510                              l115 0514                              l118 0528  
                            l127 04B2                              l137 05EA                              l147 0582  
                            l163 0445                              l164 045D                              l149 0590  
                            l165 0462                              l159 042F                              l920 04D8  
                            l912 04BF                              l916 04D3                              l844 05F2  
                            l918 048B                              l846 05E2                              l942 0573  
                            l880 0524                              l890 0544                              l884 0529  
                            l876 0515                              l964 0597                              l958 058D  
                            l974 05A6                              l896 04FB                              l968 059A  
                            l994 05C1                              l978 05AE                              l988 05B7  
                            u405 051C                              u435 0530                              u657 05D4  
                   __CFG_BORV$LO 0000                              wreg 0009                             l1020 0441  
                           l1012 0435                             l1014 0439                             l1032 046B  
                           l1034 046F                     __CFG_WDTE$ON 0000          __size_of_manchester_enc 0069  
                           _LATA 010C                  manchester_enc@i 007A                  manchester_enc@k 0075  
                           _WPUA 020C                     __CFG_WRT$OFF 0000                             _main 0412  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
                           btemp 007E                    __CFG_BOREN$ON 0000                             ltemp 007E  
                           start 0001                             ttemp 007E                             wtemp 007E  
                  __CFG_MCLRE$ON 0000                  ?_FVR_Initialize 0070   __size_of_OSCILLATOR_Initialize 0005  
  __end_of_OSCILLATOR_Initialize 062F                            ?_main 0070                            _PORTA 000C  
                          _TRISA 008C                    __CFG_PWRTE$ON 0000                            _crc12 0487  
                 _WDT_Initialize 062F                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                   __p_serial_text 03FD  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                  __initialization 0400                     __end_of_main 0487  
                         ??_main 007C                   __CFG_PLLEN$OFF 0000           __end_of_WDT_Initialize 0633  
                         ?_crc12 0070                           _ADCON0 009D                           _ADCON1 009E  
                         _ADCON2 009F                           _ADRESH 009C                           _ADRESL 009B  
                         _APFCON 011D                           _ANSELA 018C                           _FVRCON 0117  
                         _OSCCON 0099                           _WDTCON 0097                manchester_enc@len 0071  
               __end_of_delay_us 05F7                           crc12@i 0078                           crc12@k 0079  
                 __CFG_STVREN$ON 0000                           _encman 0024                           _serial 03FD  
       __size_of_ADC1_Initialize 0009                     crc12@inbuf_t 0075                  ?_WDT_Initialize 0070  
                 _manchester_enc 04F8                _SYSTEM_Initialize 0624          __end_of__initialization 0410  
             ?_SYSTEM_Initialize 0070                   __pcstackCOMMON 0070                     __pidataBANK0 0610  
                  __end_of_crc12 04F8              ??_SYSTEM_Initialize 0070                   _OPTION_REGbits 0095  
                __CFG_LPBOREN$ON 0000           __end_of_manchester_enc 0561                          ??_crc12 0072  
                     crc12@inbuf 0077        __end_of_SYSTEM_Initialize 062A               _ADC1_GetConversion 05C6  
                     __pbssBANK0 0020              ?_ADC1_GetConversion 0070                 ??_FVR_Initialize 0070  
                     __pmaintext 0412                 main@lc_ext_state 003C                      sendSignal@i 007B  
                    sendSignal@k 0077                      sendSignal@n 0078             ??_ADC1_GetConversion 0072  
                      ?_delay_us 0070                  ?_manchester_enc 0070                          _OSCTUNE 0098  
              ??_ADC1_Initialize 0070         manchester_enc@outbuf_idx 0076                          _adc_RA2 0020  
            sendSignal@old_state 007A                          __ptext1 0561                          __ptext2 05E0  
                        __ptext3 04F8                          __ptext4 0487                          __ptext5 0624  
                        __ptext6 062F                          __ptext7 05F7                          __ptext8 062A  
                        __ptext9 0633            _OSCILLATOR_Initialize 062A         ??_PIN_MANAGER_Initialize 0070  
                     ??_delay_us 0070       __size_of_SYSTEM_Initialize 0006                          clrloop0 061F  
           end_of_initialization 0410                       _sendSignal 0561                          init_ram 0618  
                        initloop 0619                   _serial_absaddr 03FD                 ??_WDT_Initialize 0070  
               __CFG_FOSC$INTOSC 0000             manchester_enc@outbuf 0070        ADC1_GetConversion@channel 0073  
         ?_OSCILLATOR_Initialize 0070                   __end_of_serial 0400                    delay_us@delay 0071  
            start_initialization 0400  __size_of_PIN_MANAGER_Initialize 0010                      ?_sendSignal 0070  
                    __pdataBANK0 0034                  _ADC1_Initialize 0607                      crc12@outbuf 0070  
               ??_manchester_enc 0072                        ___latbits 0000                    __pcstackBANK0 003C  
                  _battery_level 0022                __size_of_delay_us 0017                  sendSignal@wbyte 0079  
         _PIN_MANAGER_Initialize 05F7              __size_of_sendSignal 0065      __size_of_ADC1_GetConversion 001A  
                 __size_of_crc12 0071                     sendSignal@pt 0076                         _LATAbits 010C  
                      delay_us@i 0072                        delay_us@k 0073                        clear_ram0 061E  
        __end_of_ADC1_Initialize 0610                       _ADCON0bits 009D          __size_of_FVR_Initialize 0004  
            manchester_enc@hbyte 0077              manchester_enc@inbuf 0074              manchester_enc@lbyte 0078  
            manchester_enc@tbyte 0079          ??_OSCILLATOR_Initialize 0070                         crc12@crc 007A  
                       crc12@len 0071                         _delay_us 05E0                         __ptext10 0607  
                       __ptext11 05C6                     ??_sendSignal 0074                         _packet_t 0034  
                  __size_of_main 0075                 ?_ADC1_Initialize 0070               __end_of_sendSignal 05C6  
                     _FVRCONbits 0117          __size_of_WDT_Initialize 0004          ?_PIN_MANAGER_Initialize 0070  
              __CFG_CLKOUTEN$OFF 0000                   _FVR_Initialize 0633   __end_of_PIN_MANAGER_Initialize 0607  
